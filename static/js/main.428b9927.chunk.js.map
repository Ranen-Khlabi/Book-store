{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TexetInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","src","alt","height","to","AboutPage","href","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","actionTypes","filter","id","parseInt","emitChange","push","map","courses","CourseList","props","key","onClick","deleteCourse","title","authorId","category","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","saveCourse","fetch","method","headers","body","JSON","stringify","then","catch","courseApi","dispatch","loadCourses","courseId","CoursesPage","useState","courseStore","getCourses","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","defaultProps","CourseForm","onSubmit","errors","ManageCoursePage","setErrors","setCourse","match","params","courseActions","getCourseBySlug","event","updatedCourse","target","preventDefault","_errors","Object","keys","formIsValid","history","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.428b9927.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n    <div className=\"jumbotron\">\r\n        <img src=\"https://www.electronicbub.com/wp-content/uploads/2019/11/%D9%83%D8%AA%D8%A8-%D8%A7%D9%84%D9%83%D8%AA%D8%B1%D9%88%D9%86%D9%8A%D8%A7%D8%AA.png\" alt=\"logo\" height=\"150px\" />\r\n        <h1>R-Book Store</h1>\r\n        <p>STAY HOME AND READ BOOK</p>\r\n        <Link to=\"about\" className=\"btn btn-primary\">\r\n            About us\r\n        </Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport \"./about.css\";\r\n\r\nclass AboutPage extends React.Component {\r\n    render() {\r\n        return (\r\n        <>\r\n          <div className=\"home\">\r\n          <h4>Welcome!</h4>\r\n          <h5>It is a website that helps <strong>students</strong> or anyone who wants to search\r\n              <br/>for a reference or book that helps them through this site,<br/>\r\n              and also anyone who wants to <strong>contribute</strong> to publishing a reference or book.</h5>\r\n              <br/>\r\n              <h4>Connect with us!</h4>\r\n              <a href=\"https://ranen-alkhlabi@hotmail.com\"> Email</a> \r\n              <a href=\"https://slack.com/UUYCYF10R\">Slack</a> \r\n              <a href=\"https://github.com/Ranen-Khlabi\">Github</a> \r\n        </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    const activeStyle = { color: \"orange\" }; \r\n    return (\r\n        <nav>\r\n            <NavLink activeStyle={activeStyle} exact to=\"/\">\r\n                Home\r\n            </NavLink>\r\n            {\" | \"} \r\n            <NavLink activeStyle={activeStyle} to=\"/courses\">\r\n                Books\r\n            </NavLink>\r\n            {\" | \"}\r\n            <NavLink activeStyle={activeStyle} to=\"/about\">\r\n                About us\r\n            </NavLink> \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import { Dispatcher } from \"flux\";\r\nconst dispatcher = new Dispatcher();\r\nexport default dispatcher;","export default {\r\n    CREATE_COURSE: \"CREATE_COURSE\",\r\n    UPDATE_COURSE: \"UPDATE_COURSE\",\r\n    DELETE_COURSE: \"DELETE_COURSE\",\r\n    LOAD_COURSES: \"LOAD_COURSES\"\r\n};","import { EventEmitter } from \"events\";\r\nimport Dispatcher from '../appDispatcher';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _courses = [];\r\n\r\nclass CourseStore extends EventEmitter {\r\n    addChangeListener(callback) {\r\n        this.on(CHANGE_EVENT, callback);\r\n    }\r\n\r\n    removeChangeListener(callback) {\r\n        this.removeListener(CHANGE_EVENT, callback);\r\n    }\r\n\r\n    emitChange() {\r\n        this.emit(CHANGE_EVENT);\r\n    }\r\n\r\n    getCourses() {\r\n        return _courses;\r\n    }\r\n\r\n    getCoursesBySlug(slug) {\r\n        return _courses.find(course => course.slug === slug);\r\n    }\r\n}\r\n\r\nconst store = new CourseStore();\r\n\r\nDispatcher.register(action => {\r\n    switch(action.actionType) {\r\n        case actionTypes.DELETE_COURSE:\r\n            _courses = _courses.filter(\r\n                course => course.id !== parseInt(action.id, 10)\r\n            );\r\n            store.emitChange();\r\n            break;\r\n        case actionTypes.CREATE_COURSE:\r\n            _courses.push(action.course);\r\n            store.emitChange();\r\n            break;\r\n        case actionTypes.UPDATE_COURSE:\r\n            _courses = _courses.map(course => \r\n                course.id === action.course.id ? action.course : course\r\n            );\r\n            store.emitChange();\r\n            break;\r\n        case actionTypes.LOAD_COURSES:\r\n            _courses = action.courses;\r\n            store.emitChange();\r\n            break;\r\n        default:\r\n        // nothing to do here\r\n    }\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseList(props) {\r\n    return (\r\n    <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>&nbsp;</th>\r\n                <th>Book Name</th>\r\n                <th>Contributr</th>\r\n                <th>Category</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {props.courses.map(course => {\r\n                return ( \r\n                <tr key={course.id}>\r\n                    <td>\r\n                        <button className=\"btn btn-outline-danger\" \r\n                        onClick={() => props.deleteCourse(course.id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <Link to={\"/course/\" + course.slug}>{course.title}</Link>\r\n                    </td>\r\n                    <td>{course.authorId}</td>\r\n                    <td>{course.category}</td>\r\n                </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nCourseList.propTypes = {\r\n    deleteCourse: PropTypes.func.isRequired,\r\n    courses: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        authorId: PropTypes.number.isRequired,\r\n        category: PropTypes.string.isRequired\r\n    })).isRequired\r\n}\r\n\r\nexport default CourseList;","export async function handleResponse(response) {\r\n    if (response.ok) return response.json();\r\n    if (response.status === 400) {\r\n      // So, a server-side validation error occurred.\r\n      // Server side validation returns a string error message, so parse as text instead of json.\r\n      const error = await response.text();\r\n      throw new Error(error);\r\n    }\r\n    throw new Error(\"Network response was not ok.\");\r\n  }\r\n  \r\n  // In a real app, would likely call an error logging service.\r\n  export function handleError(error) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(\"API call failed. \" + error);\r\n    throw error;\r\n  }","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}","import dispatcher from '../appDispatcher';\r\nimport * as courseApi from '../api/courseApi';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport function saveCourse(course) {\r\n    return courseApi.saveCourse(course).then(saveCourse => {\r\n        // Hey dispatcher, go tell all the stores that a course was just created.\r\n        dispatcher.dispatch({\r\n            actionType: course.id\r\n            ? actionTypes.UPDATE_COURSE\r\n            : actionTypes.CREATE_COURSE,\r\n            course: saveCourse\r\n        });\r\n    });\r\n}\r\n\r\nexport function loadCourses() {\r\n    return courseApi.getCourses().then(courses => {\r\n        dispatcher.dispatch({\r\n            actionType: actionTypes.LOAD_COURSES,\r\n            courses: courses\r\n        });\r\n    });\r\n}\r\n\r\nexport function deleteCourse(id) {\r\n    return courseApi.deleteCourse(id).then(() => {\r\n        dispatcher.dispatch({\r\n            actionType: actionTypes.DELETE_COURSE,\r\n            id: id\r\n        });\r\n    });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport courseStore from '../stores/courseStore';\r\nimport CourseList from \"./CourseList\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\n\r\nfunction CoursesPage() {\r\n    const [ courses, setCourses ] = useState(courseStore.getCourses());\r\n\r\n    useEffect( () => {\r\n        courseStore.addChangeListener(onChange);\r\n        if (courseStore.getCourses().length === 0) loadCourses();\r\n        return () => courseStore.removeChangeListener(onChange);\r\n    }, []);\r\n\r\n    function onChange() {\r\n        setCourses(courseStore.getCourses());\r\n    }\r\n    \r\n    return (\r\n    <>\r\n        <h2>Courses</h2>\r\n        <Link className=\"btn btn-primary\" to=\"/course\">\r\n            Add Book\r\n        </Link>\r\n        <CourseList courses={courses} deleteCourse={deleteCourse}/>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h2>Page Not Found</h2>\r\n            <p>\r\n                <Link to=\"/\">Back to Home</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TextInput(props) {\r\n    let wrapperClass = \"form-group\";\r\n    if (props.error.length > 0) {\r\n        wrapperClass += \"has-error\"\r\n    }\r\n    return (\r\n        <div className={wrapperClass}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            <div className=\"field\">\r\n                <input\r\n                id={props.id}\r\n                type=\"text\"\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                className=\"form-control\"\r\n                value={props.value}\r\n                />\r\n            </div>\r\n            {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nTextInput.propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        value: PropTypes.string,\r\n        error: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n    error: \"\"\r\n};\r\n\r\nexport default TextInput;","import React from \"react\";\r\nimport TextInput from './common/TexetInput';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CourseForm(props) {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"title\"\r\n        label=\"Title\"\r\n        onChange={props.onChange}\r\n        name=\"title\"\r\n        value={props.course.title}\r\n        error={props.errors.title}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"author\">Contributr</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id=\"author\"\r\n            name=\"authorId\"\r\n            onChange={props.onChange}\r\n            value={props.course.authorId || \"\"}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Student</option>\r\n            <option value=\"2\">Teacher</option>\r\n            <option value=\"2\">Visitor</option>\r\n          </select>\r\n        </div>\r\n        {props.errors.authorId && (\r\n          <div className=\"alert alert-ganger\">{props.errors.title}</div>\r\n        )}\r\n      </div>\r\n\r\n      <TextInput\r\n        id=\"category\"\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        onChange={props.onChange}\r\n        value={props.course.category}\r\n        error={props.errors.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errosr: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CourseForm from './CourseForm';\r\nimport courseStore from '../stores/courseStore';\r\nimport { toast } from \"react-toastify\";\r\nimport * as courseActions from '../actions/courseActions';\r\n\r\nconst ManageCoursePage = props => {\r\n    const [errors, setErrors] = useState({});\r\n    const [courses, setCourses] = useState(courseStore.getCourses());\r\n    const [course, setCourse] = useState({\r\n        id: null,\r\n        slug: \"\",\r\n        title: \"\",\r\n        authorId: null,\r\n        category: \"\"\r\n    });\r\n\r\n    useEffect( () => {\r\n        courseStore.addChangeListener(onChange);\r\n        const slug = props.match.params.slug; //from the path '/courses/:slug'\r\n        if (courses.length === 0) {\r\n            courseActions.loadCourses();\r\n        } else if (slug) {\r\n            setCourse(courseStore.getCourseBySlug(slug));\r\n        }\r\n        return () => courseStore.removeChangeListener(onChange);\r\n    }, [courses.length, props.match.params.slug]);\r\n\r\n    function onChange() {\r\n        setCourses(courseStore.getCourses());\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const updatedCourse = { \r\n            ...course, \r\n            [event.target.name]: event.target.value \r\n        };\r\n        setCourse(updatedCourse);\r\n    }\r\n\r\n    function formIsValid() {\r\n        const _errors = {};\r\n\r\n        if (!course.title) _errors.title = \"Title is required\";\r\n        if (!course.authorId) _errors.authorId = \"Author ID is required\";\r\n        if (!course.category) _errors.category = \"Category is required\";\r\n\r\n        setErrors(_errors);\r\n        //Form is valid if the errors object has no propertis\r\n        return Object.keys(_errors).length === 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        courseActions.saveCourse(course).then(() => {\r\n            props.history.push(\"/courses\");\r\n            toast.success(\"Book save.\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Manage Book</h2>\r\n            <CourseForm \r\n                errors={errors}\r\n                course={course} \r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit} \r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n","import React from 'react';\r\nimport HomePage from './HomePage';\r\nimport AboutPage from './AboutPage';\r\nimport Header from './common/Header';\r\nimport CoursesPage from './CoursesPage';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport ManageCoursePage from './ManageCoursePage';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <ToastContainer autoClose={1000} hideProgressBar />\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/courses\" component={CoursesPage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\r\n        <Route path=\"/course\" component={ManageCoursePage} />\r\n        <Redirect from=\"/about-page\" to=\"about\" />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nrender(\r\n  <Router>\r\n    <App />\r\n  </Router>, \r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}